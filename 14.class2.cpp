//#include <iostream>
//using namespace std;
////코드 표기법
//
////클래스 : 정보 은닉
////객체의 내부 구현을 외부로부터 숨기는 것(private)
//
////캡슐화(Encaspsulation)
////객체의 상태와 동작을 하나로 묶어서 그 기능을 통해 상호작용하도록 한다.
//// --> 가려줄 정보를 private로 설정, 그 데이터에 대한 설정 또는 접근을 할 수 있는(메소드)을 public으로 제공된다.
//
//class Student
//{
//private:
////학번과 학생의 이름은 외부에서 함부로 수정하면 안되는 값
//	int sid;
//	string sname;
//public:
////set 함수 : void 형태의 함수이면서, 설정하려는 데이터의 형태를 매개변수로 가지고 있음
////			 전달 받은 값으로 객체의 상태를 초기화하는 기능
////			 set + 변수명으로 이름을 만들어주며, 보통 변수의 앞글자를 대문자로 작성
//
////get 함수 : 데이터의 형태를 반환타입으로 가지는 형태의 함수
////			 매개변수를 따로 가지지 않음
////			 해당 데이터 값을 그대로 return하는 기능
////			 get + 변수명으로 이름을 만들어주며, 보통 변수의 앞글자를 대문자로 작성
//	void setSid(int id)
//	{
//		sid = id;
//	}
//	int getSid()
//	{
//		return sid;
//	}
//	void setSname(string name)
//	{
//		sname = name;
//	}
//	string getSname()
//	{
//		return sname;
//	}
//};
//
////다음 조건에 맞는 클래스 point를 설계하시오.
////1. point 클래스는 좌표를 표현하기 위한 클래스입니다.
////2. 좌표는 x축과 y축
////3. x축과 y축에 대한 set/get 함수를 구현합니다.
////4. point 클래스에는 현재의 좌표를 출력하는 함수 show()를 가지고 있습니다.
////	 좌표의 기준에 따라 몇 사분면인지도 같이 출력합니다.
////	 사분면이란? 좌표의 위치에 따라 제 1,2,3,4 사분면으로 부릅니다.
////출력예시) 좌표가 10, 5일 경우
////			좌표 : (10, 5) 제 1사분면
////5. main 코드에서 point 객체 p1을 선언합니다.
////6. p1의 축을 설정합니다.
////7. show(0을 통해 해당 좌표를 출력합니다.
//
////1. x,y에 대한 선언, x,y에 대한 s/g 구현 --> 1점
////2. show() 구현
////	 1. public 영역에 구현 -- 1점
////	 2. 좌표에 대한 출력 -- 1점
////	 3. 사분면에 대한 출력 -- 3점
////3. main에서 객체 p1 선언 -- 1점
////4. 실행 시 콘솔 창에서 정상적으로 출력 -- 4점
//
//
//int main()
//{
//	//stdent01 객체 선언
//	Student student01;
//
//	//student01 객체의 데이터 초기화
//	student01.setSid(2025451); //2025년 4월 5일에 등록된 1번째 학생
//	student01.setSname("이희민"); //학생 이름
//
//	//student01 객체의 정보를 출력
//	cout << "학번 : " << student01.getSid() << "이름 : " << student01.getSname() << endl;
//
//	return 0;
//}