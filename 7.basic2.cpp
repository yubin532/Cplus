#include "Header.h"
//Header.h의 내용이 추가됩니다.

int main()
{
	//반복문 for문
	//for(초기식;조건식;변화식)
	//{
	// 반복할 명령문;
	//}

	//반복문 while문
	//while(조건식)
	//{
	// 반복할 명령문;
	// 변화식;
	//}

	//While true문
	//while(true)
	//{
	// 반복할 명령문;
	// 무조건적인 무한 반복이 아닌 특정 상황에 탈출하고 싶을 경우 따로 변화식 작성
	//}

	//do wile문
	//do
	//{
	// 반복할 명령문;
	//}while(조건식);

	//두 문법의 차이점
	//1. for문은 반복해야하는 횟수가 정확한 경우에 주로 사용됩니다.(ex. 10회 반복)
	//2. while문은 특정 조건일 동안 계속 들리는 경우에 주로 사용됩니다.(ex. 체력이 0이 아닌 동안 반복)
	//3. for문은 ()안에 초기식, 조건식, 변화식이 전부 작성되어 한번에 반복문에 필요한 모든 내용을 확인할 수 있습니다.
	//4. while문은 while(true)를 통해 무한 반복을 작업할 때도 사용됩니다.
	//5. do - while의 설계로, 조건과 상관없이 무조건 1회를 실행하고, 그 이후에 반복을 처리하는 설계를 할 수 있습니다.

	//반복문의 보조 문법
	//break : 작업을 중단합니다.
	//continue : 해당 작업을 건너뛰고, 다음 반복 차례로 넘어갑니다.

	//연습 문제 1
	//1부터 100까지의 숫자 중에서 3과 4의 공배수의 합을 계산합니다.
	//해당 값이 500을 초과하는 경우 반복문을 탈출해
	//현재까지의 총합과, 마지막 수를 계산하시오.

	/*int number = 0;
	int last = 0;
	for (int i = 1; i <= 100; i++)
	{
		if (i % 3 == 0 && i % 4 == 0)
		{
			number += i;
			last = i;
			if (number > 500)
			{
				break;
			}
		}
		cout << "현재까지의 총합 : " << number << endl;
		cout << "마지막 수 : " << i << endl;
	}*/

	//연습 문제 2
	//3 6 9 게임을 구현하시오.
	// //(범위는 1부터 30가지)
	//ex) 1 2 짝 4 5 짝 7 8 짝..
	
	/*for (int i = 1; i <= 30; i++)
	{
		if (i / 10 == 3 || i % 10 == 3 || i % 10 == 6 || i % 10 == 9)
		{
			cout << "짝 ";
		}
		else
		{
			cout << i + " ";
		}

	}*/

	//숫자를 입력하면 그 숫자의 악수를 출력하는 프로그램을 구현합니다.
	//ex) 숫자를 입력해주세요(정수) : 15
	// 1 3 5 15
//
//	cout << endl;
//	int input_number;
//	cout << "숫자를 입력해주세요(정수) : ";
//	cin >> input_number;
//
//	for (int i = 1; i <= input_number; i++)
//	{
//		if (input_number % i == 0)
//		{
//			cout << i << " ";
//		}
//	}
//	return 0;
//}